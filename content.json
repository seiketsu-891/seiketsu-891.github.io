{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/12/14/hello-world/"},{"title":"Leetcode 1 Two Sum","text":"question:Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have *exactly* one solution, and you may not use the same element twice. You can return the answer in any order. basic ideaThe simplest but not so efficient method is to iterate the array and for every item in the array, we iterate the items after it and to check if we could get the the sum we want. Time complexity of this method would be O(n^2). So how do we make the solution more efficient? Let’s look at an example. If the input is [2, 11, 15, 6], and the target is 8. We iterate the input array and when the current item is 2, we expect to find 6. we can use a map to save the index of the item 2 and the number we expect to find, which is 6. When the current items becomes 6, we check the map and find it’s just what we wanted. my solution123456789101112131415161718class Solution { public int[] twoSum(int[] nums, int target) { int[] res = new int[2]; Map&lt;Integer, Integer&gt; map = new HashMap(); for(int i = 0; i &lt; nums.length; i++){ int curr = nums[i]; if(i &gt; 0 &amp;&amp; map.containsKey(curr)){ res[0] = map.get(curr); res[1] = i; return res; } map.put(target - nums[i], i); } return res; }} time complexity: O(n) - in the worst scenario, we need to interate the whole array once space complexity: O(n) - we need an extra map","link":"/2022/12/14/Leetcode-1-Two-Sum/"},{"title":"course notes - bilibli clone","text":"Below are the notes that I took when I was learning the course “SpringBoot2.x实战B站高性能后端项目”(making a high-performance back-end project by imitating Bilibili) CHAPTER 1 project environment setup1.create a new projectThis is a multi-module project, so I need to create several modules. The basic modules in this project are: bili-api (controller) bili-service bili-dao ​ After creating the modules above, I need to create configuration files. ​ bili-api —- 2 configuration files, application-test.properties and application-online.properties. Then in the service module, create a file that contains the common configurations - application.properties 2. spring boot dependencies and dependencies between moduels (1) add SpringBoot parent denpendency and spring-web (2) dependencies between moduels : service is dependent on dao and api is dependent on service errors here: pom file in bili-api is grayed out and strikethrough ​ solution: Preferences-Maven-IgnoredFiles, uncheck the pom file. 3. launch the project (1) create a BiliApp.java file in bili-api, and add the code below 123456789@SpringBootApplicationpublic class BiliApp{ public static void main( String[] args ) { ApplicationContext app = SpringApplication.run(BiliApp.class, args); }} (2)set the profile 12# profilespring.profiles.active = test errors and problems here: “SpringBootApplication.run“ becomes red simply because I wrote SpringBootApplication instead of SpringApplication the icon before configuration file isn’t right. ref: https://blog.51cto.com/u_15441799/4675193 Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError solution: I took a lot of time to search on Google, but it was still not solved. Then I noticed that the version of spring-context and the version of spring-boot were shown in the error message, so I tried to upgrade the version of spring-boot, and it worked! profile set in a applicaiton.properties is not detected, error message: No active profile set, falling back to default profiles:default solution: I set the profile in ‘Edit configuration’ window and it worked. I tested and found that the configuration file in api module can be read properly. But I’m still wondering why setting profile in the configuration file doesn’t work. tomcat jar file broken, error message: tomcat-embed-core-9.0.53.jar; zip file is empty solution: delete tomcat-embed-core from external libraries and re-add it. 4. datasource configuration and persistence layer setup(1)MySQL dependency and configurations for datasource (2) Mybatis dependency and configurations for it (3) create tesDao/controller/service error1 : Invalid bound statement (not found): org.example.dao.TestDao.findUserNameById Actually this error is linked with the profile error above. application.properties in the parent module is not read. some attemption: 1234@PropertySources({ @PropertySource(&quot;classpath:application.properties&quot;)})// I tried to add this before the startup class and I got an exception :java.io.FileNotFoundException: class path resource [application.properties] cannot be opened because it does not exist So it means that the application.properties file is totally not found by my application. After reading https://blog.csdn.net/weixin_44695793/article/details/107752054, I noticed that there is no target folder in the parent directory, which means that application.properties file is not compiled. Then I opened the demonstration file from the course and tried to compare it with mine. Then I noticed that I put the application.properties file in the wrong place. It should in servcie-module. After correcting this, it seems that the problem above is solved. But there is a new problem. error2 : FileNotFoundException: class path resource [mapper/*.xml] cannot be opened because it does not exist solution: 1234mybatis.config-location=classpath:mapper/*.xml# I wronly wrote the configuration. The right one should be: mybatis.mapper-locations=classpath:mapper/*.xml # notice: * mapper / * locations 5. hot deployment(1)preferences- compiler - check build project automatically (2) command + option +shift + / open Maintenance window, click ‘registry’, check the following two options: compiler.document.save.enabled compiler.automake.allow.when.app.runningi(for newer edition of IDEA, go to Preferences-Advanced Settings- check ‘Allow auto-mae to start even if deveploped application is currently running’) (3)click edit-configuration ​ change ‘on Update action’ and ‘on frame deactivation’ to ‘update classes and resources’. (4) add spring-devtools dependency and configuration 1spring.devtools.restart.enabled=true In fact, it didn’t work after I had followed the instructions aboved, which are given by the instructor of the course. I did what was said in https://blog.csdn.net/luokha/article/details/119746359 (check compiler-compile indepenetd modules in parallel). Then it worked.","link":"/2022/12/14/course-notes%20bilibilib%20clone-1/"},{"title":"Leetcode-2-Add-Two-Numbers","text":"questionYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. basic idea we need to clarify the problem First. the arguments are LinkedNodes, which basically has 2 properties: value and the next node, the return value is also a LinkedNode. the given intergers are stored in reverse order . ex: arguments 2 -&gt; 3 - 1 and 2-&gt; 1 means 132+ 12 so we can iterate the two nodes, if they all have value, then add them, and store the carry. If one of them does not have value, then make the value of the other node add 0. code123456789101112131415161718192021222324252627282930313233343536373839class Solution { public ListNode addTwoNumbers(ListNode l1, ListNode l2) { ListNode resHead = null; ListNode prevNode = null; int carry = 0; int sum; while(l1 != null || l2 != null){ int num1 = (l1 != null)? l1.val : 0; int num2 = (l2 != null)? l2.val : 0; sum = num1+ num2 + carry; carry = sum / 10; sum = sum % 10; ListNode newNode = new ListNode(sum); if(resHead == null){ resHead = newNode; }else{ prevNode.next= newNode; } prevNode = newNode; if(l1 != null){ l1 = l1.next; } if(l2 != null){ l2 = l2.next; } } if(carry &gt; 0){ prevNode.next = new ListNode(carry); } return resHead; }}","link":"/2022/12/15/Leetcode-2-Add-Two-Numbers/"},{"title":"Leetcode-3- Longest Substring Without Repeating Characters","text":"Problem statementGiven a string s, find the length of the longest substring without repeating characters. AnalysisThe brute force method is to iterate every character of the string, and for each character we are iterating, iterate the charateres after it. To improve the performance, first think about what extra job do we do in the method metioned above. Let’s say the input string is ‘abcabcbb’, when we are iterating each character: when i = 0 =&gt; we will iterate : abca,(a is duplicated , so we stop here ) when i =1 =&gt; we will iterate : bcab = when i = 2 =&gt; we will iterate: cabc when i = 3 =&gt; we will iterate : abcbb when i = 4 =&gt; we will iterate : bcb …. We can use a picture to show this. As we can see, some characters were iterated several times. we can see each character sequence surrouned by a rectangle as a window, each window = the previous window - its fitst item + other items.. So we can set two pointers - left and right. Each time we encouter a duplicated charactor, we move the left pointer. For example: [a b a e f b g ] At the beginning, left = 0, right =0; then we move the right pointer to the right, when right = 2, we encounter a dulplicated item. So we move the left pointer to make left equals 1 and continue to move the right pointer. At this time, we store the length of this string sequence without repeating characters, which isright-left+ 1 Then we repeat this process. When right = 5, we find a dulplicated ‘b’, so we make left = 2, and continue to move the right pointer. Notice that when we find a duplicated item, we need to make sure that we know where to move our left pointer to, so we need to use a hashtable to store characters and their corresponding index. Code1234567891011121314151617181920212223242526272829303132class Solution { public int lengthOfLongestSubstring(String s) { if(s == null || s.length()== 0){ return 0; } int left = 0; int right = 0; int sequenceLen = 0; char[] chars = s.toCharArray(); HashMap&lt;Character, Integer&gt; map = new HashMap&lt;&gt;(); while(right &lt; chars.length) { char curr = chars[right]; if (map.containsKey(curr) &amp;&amp; map.get(curr) &gt;=left) { // if we found a duplicated item, we update sequenceLen and move the left pointer. // we need to assure that map.get(curr) &gt;= left as the curr character sequence is from index-left to index-right. sequenceLen = Math.max(right - left, sequenceLen); left = map.get(curr) + 1; }else{ // in the above, we only update the length value when we found a duplicated item, but if we have reached the last item in the array and there is no duplicated charaters, we still need to update the length value. for example: [a,a,b]. if(right == chars.length-1){ sequenceLen = Math.max(right - left + 1, sequenceLen); } } map.put(curr, right); right++; } return sequenceLen; }}","link":"/2022/12/16/Leetcode-3-Longest-Substring-Without-Repeating-Characters/"},{"title":"notes-JavaWeb","text":"1. Tomcaterror1: 404 I think there are some problems with the version of the Tomcat. My local tomcat is 8.5.50, but the version shown on the 404 page is 9.0.68(which is the version of the Tomcat in the bilibili -clone project. ) Although I think the version of tomcat in these 2 projects don’t impact each other… but to solve this 404 problem, I decided to download Tomcat 9.0.68. Then errro2 appears…. error2 : Cannot find ./catalina.sh,The file is absent or does not have execute permission the reason is that I don’t have the permission to execute that file. solution: 1chmod +x *.sh After making this error disappear, the 404 error also disapears… 2. a simple servlet demoservlet can be seen as a component between request and DAO. For example, assume that we submit a form with “action=addUser”, then a servlet named “addUser” helps us resolve the data from the request and give those data to UserDAO. a simple demo: 12345&lt;!-- html --&gt; &lt;form method=&quot;post&quot; action=&quot;/addUser&quot;&gt; name： &lt;input name=&quot;name&quot;&gt; &lt;button type=&quot;submit&quot;&gt;submit&lt;/button&gt; &lt;/form&gt; servlet 123456public class AddUserServlet extend HttpServlet { @Override protected void doPost(httpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String name = req.getParameter(&quot;name&quot;); System.our.println(&quot;name is: &quot; + name)} To bind the form post request and the servlet, we need to add some configuration in web.xml file. 123456789&lt;servlet&gt; &lt;servlet-name&gt;addUser&lt;/servlet-name&gt; &lt;servlet-class&gt;com.demo.servlet.AddUserServlet&lt;/servlet-class&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt; &lt;servlet-name&gt;addUser&lt;/servlet-name&gt; &lt;url-pattern&gt;/addUser&lt;/url-pattern&gt;&lt;/servlet-mapping&gt; 3. some other points on ServletencodingIf we input Chinese or Japanese in the input filed above, the servlet can’t get the right parameter value. To solve this problem, we need to: 123request.setCharacterEncoding(&quot;UTF-8&quot;);// notice that after Tomcat 8, we don't need to care about the encoding for get requests. life cycleTomcat helps us to manage the life cycle of Servlet. init() service( ) - check request method and call responding method(post =&gt; doPost) destroy() By default, a servlet was initialized after it received a request for the first time. After Tomcat was stopped, all the servelet instances will be destroyed. We could use the code below to see at what timing each method is called. 1234567891011121314151617181920public class AddUserServlet extends HttpServlet { public AddUserServlet(){ System.out.println(&quot;addUserServlet instance is created&quot;); } @Override public void init() throws ServletException { System.out.println(&quot;init method is called&quot;); } @Override protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { System.out.println(&quot;service method is called&quot;); } @Override public void destroy() { System.out.println(&quot;destroy method is called&quot;); }} the first time we click the submit button to send a post request, the content below will be printed : 123addUserServlet instance is created init method is calledservice method is called after that, if we submitted a new post request, only the service method is called. If we ternimate Tomcat, destroy method would be called. Actually, we can change the initilazation timing of a servlet 123456&lt;servlet&gt; &lt;servlet-name&gt;... &lt;servlet-class&gt;... &lt;!-- a servet with a smaller number initializes earlier--&gt; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt; &lt;/servlet&gt; For every Servlet, only one instance will be created, which means that it’s unsecure to use in multi-thread sceinarios. session managemenet","link":"/2022/12/15/notes-JavaWeb/"},{"title":"notes-JDBC","text":"1. data persistence in Java use JDBC to access database JDO /Java Data Object third-party tools such as Hibernate and Mybatis JDBC is the basic as others encapsulated it. 2. JDBC concept full-name: Java Database connectivity JDBC offers a set of Java APIs to makes it possible to access any kinds of database in the same way by using differenct drivers. It actually offers a set of specification. Database vendors implements the Driver APIs to manipulate the data. As programmars we don’t neet to care too much about how the Driver APIs are implemented. 3.create connections add jar file create a folder called lib, put mysql-connector-jave jar file into it, then right-click the file and choose “Build Path- Add to Build Path”. 12345678Driver driver = new com.mysql.cj.jdbc.Driver();String url = &quot;jdbc:mysql://localhost:3306/test&quot;; // jdbc:protocal, mysql: sub protocal Properties info = new Properties();info.setProperty(&quot;user&quot;, &quot;root&quot;); // notice that it's &quot;user&quot;, not &quot;username&quot; here. info.setProperty(&quot;password&quot;, &quot;root&quot;);Connection conn = driver.connnet(url, info); we could do something to make the above code more elegant. 1234567// 1. create driver instance by reflectionClass clazz = Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);Driver driver = (Driver) clazz.getDeclaredConstructor().newInstance(); //xx.newInstance() is depracated;// 2. use DriverManagerDriverManager.registerDriver(driver);DriverManager.getConnetion(url, user, password); // there are several other apis here, such as getConnection(url, info) Actually, the first 3 lines of code above can be replaced with one line of code 1234567891011121314Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;) // this code means that we load the MySQL Driver class into our memory. // in the source code, there is a static code block that will be executed after the class is loaded into memory. // so, Mysql Driver automatically registers the driver for us. // the relatvie source code: static { try{ java.sql.DriverManager.registerDriver(new Driver()); }catch(...){ ... }} actually, we don’t even to load the class manually! It will be automatically loaded. 123Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;) // we don't need this line! // However, be aware that this dosen't apply to all vendors.(ex : Oracle).So keeping this line of code is recommended. Notice that we hard code the infomation about our database. Intead of doing this, we could put those information in a property file. create jdbc.propertiesffile in src direactory. 1234driverClass=com.mysql.cj.jdbc.Driverurl=jdbc:mysql://localhost:3306/testuser=rootpassword=root get info 123456789InputStream iStream = ConnectionTest.class.getClassLoader().getResourceAsStream(&quot;jdbc.properties&quot;);Properties pros = new Properties();pros.load(iStream);String driverClass = props.getProperty(&quot;driverClass&quot;);String url = props.getProperty(&quot;url&quot;);String user = props. getProperty(&quot;user&quot;);String password = props.getProperty(&quot;password&quot;); so the full final version of code is: 12345678910111213141516// read info from properties fileInputStream iStream = ConnectionTest.class.getClassLoader().getResourceAsStream(&quot;jdbc.properties&quot;);Properties pros = new Properties();pros.load(iStream);String driverClass = props.getProperty(&quot;driverClass&quot;);String url = props.getProperty(&quot;url&quot;);String user = props. getProperty(&quot;user&quot;);String password = props.getProperty(&quot;password&quot;);// load Driver Class.forName(driverClass);// get a connectionConnection conn = DriverManager.getConnection(url, user, password);","link":"/2022/12/15/notes-JDBC/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","link":"/tags/Leetcode/"},{"name":"notes","slug":"notes","link":"/tags/notes/"},{"name":"course-notes","slug":"course-notes","link":"/tags/course-notes/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"JDBC","slug":"JDBC","link":"/tags/JDBC/"},{"name":"course-note","slug":"course-note","link":"/tags/course-note/"},{"name":"JavaWeb","slug":"JavaWeb","link":"/tags/JavaWeb/"}],"categories":[{"name":"Leetcode","slug":"Leetcode","link":"/categories/Leetcode/"},{"name":"database","slug":"database","link":"/categories/database/"},{"name":"JavaWeb","slug":"JavaWeb","link":"/categories/JavaWeb/"}],"pages":[]}